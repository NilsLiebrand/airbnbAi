{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":12331747,"sourceType":"datasetVersion","datasetId":7715214}],"dockerImageVersionId":31041,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Training the model","metadata":{}},{"cell_type":"code","source":"import os\n#for dirname, _, filenames in os.walk('/kaggle/input'):\n#    for filename in filenames:\n        #print(os.path.join(dirname, filename))\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:30:12.331168Z","iopub.execute_input":"2025-07-09T09:30:12.331401Z","iopub.status.idle":"2025-07-09T09:30:12.339563Z","shell.execute_reply.started":"2025-07-09T09:30:12.331378Z","shell.execute_reply":"2025-07-09T09:30:12.338882Z"}},"outputs":[],"execution_count":1},{"cell_type":"code","source":"import os\nimport numpy as np\nimport pandas as pd\nimport torch\nfrom torch import nn\nfrom torch.utils.data import Dataset, DataLoader, random_split\nfrom PIL import Image\nimport torchvision.transforms as transforms\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.impute import SimpleImputer\nimport matplotlib.pyplot as plt\n\n#progress bar\nfrom tqdm import trange\nfrom tqdm import tqdm","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:30:12.382096Z","iopub.execute_input":"2025-07-09T09:30:12.382383Z","iopub.status.idle":"2025-07-09T09:30:22.056753Z","shell.execute_reply.started":"2025-07-09T09:30:12.382358Z","shell.execute_reply":"2025-07-09T09:30:22.056259Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"torch.set_default_dtype(torch.float32)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:30:22.058019Z","iopub.execute_input":"2025-07-09T09:30:22.058751Z","iopub.status.idle":"2025-07-09T09:30:22.062067Z","shell.execute_reply.started":"2025-07-09T09:30:22.058729Z","shell.execute_reply":"2025-07-09T09:30:22.061339Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"use_cuda = True\nuse_cuda = False if not use_cuda else torch.cuda.is_available()\ndevice = torch.device('cuda:0' if use_cuda else 'cpu')\ntorch.cuda.get_device_name(device) if use_cuda else 'cpu'\nprint('Using device', device)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:30:22.062988Z","iopub.execute_input":"2025-07-09T09:30:22.063268Z","iopub.status.idle":"2025-07-09T09:30:22.159998Z","shell.execute_reply.started":"2025-07-09T09:30:22.063250Z","shell.execute_reply":"2025-07-09T09:30:22.159329Z"}},"outputs":[{"name":"stdout","text":"Using device cuda:0\n","output_type":"stream"}],"execution_count":4},{"cell_type":"markdown","source":"## Loading and preparing data","metadata":{}},{"cell_type":"code","source":"# Load and filter data\ndata = pd.read_csv(\"/kaggle/input/airbnbdata-barcelona/listing_data.csv\")\ndata = data.select_dtypes(exclude=['object', 'string'])\n\npicture_dir = \"/kaggle/input/airbnbdata-barcelona/picture_url_128x128/picture_url_128x128\"\nhost_picture_dir = \"/kaggle/input/airbnbdata-barcelona/host_picture_url_128x128/host_picture_url_128x128\"\n\ndef image_exist(img_id):\n    img_id = int(img_id)\n    #host_path = os.path.join(host_picture_dir, f\"image_{img_id}.jpg\")\n    picture_path = os.path.join(picture_dir, f\"image_{img_id}.jpg\")\n    return os.path.isfile(picture_path)\n\ndef host_image_exists(img_id):\n    img_id = int(img_id)\n    host_path = os.path.join(host_picture_dir, f\"image_{img_id}.jpg\")\n    return os.path.isfile(host_path)\n\n\ndata[\"picture_exists\"] = data[\"id\"].apply(image_exist)\ndata[\"host_picture_exists\"] = data[\"id\"].apply(host_image_exists)\n\n# Define target column\ntarget_clm = \"price\"\n\n# Drop rows with missing target and missing id\ndata = data.dropna(subset=[target_clm, \"id\"])\n\ndata = data.select_dtypes(exclude=['object', 'string'])\n#data = data.drop(\"id\", axis=1)\n\n# Create an imputer that fills NaNs with the mean of each column\nimputer = SimpleImputer(strategy='mean')\n\n# Fit the imputer on your data and transform it\ndata_imputed = imputer.fit_transform(data)\n\n# Convert back to DataFrame to keep column names\ndata = pd.DataFrame(data_imputed, columns=data.columns)  \n\n\n\n#data = data[data['id'].apply(images_exist)].reset_index(drop=True)\n\nprint(data)\ndata.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:30:22.161334Z","iopub.execute_input":"2025-07-09T09:30:22.161530Z","iopub.status.idle":"2025-07-09T09:32:46.473339Z","shell.execute_reply.started":"2025-07-09T09:30:22.161514Z","shell.execute_reply":"2025-07-09T09:32:46.472581Z"}},"outputs":[{"name":"stdout","text":"                 id   latitude  longitude  price  minimum_nights  \\\n0      1.867400e+04  41.405560   2.172620  179.0             1.0   \n1      2.319700e+04  41.412432   2.219750  251.0             3.0   \n2      3.271100e+04  41.405660   2.170150  104.0             1.0   \n3      3.424100e+04  41.380620   2.175170  157.0            31.0   \n4      3.498100e+04  41.379780   2.176230  401.0             5.0   \n...             ...        ...        ...    ...             ...   \n15268  1.368830e+18  41.387100   2.171690   69.0             1.0   \n15269  1.368843e+18  41.396902   2.175337   68.0            32.0   \n15270  1.368857e+18  41.394700   2.163284  206.0            31.0   \n15271  1.368915e+18  41.378330   2.163580   92.0             1.0   \n15272  1.368966e+18  41.390737   2.161145  154.0             3.0   \n\n       number_of_reviews  reviews_per_month  calculated_host_listings_count  \\\n0                   45.0           0.310000                            29.0   \n1                   82.0           0.480000                             1.0   \n2                  143.0           0.860000                             3.0   \n3                   25.0           0.140000                             3.0   \n4                  256.0           1.460000                             3.0   \n...                  ...                ...                             ...   \n15268                0.0           1.638309                            14.0   \n15269                0.0           1.638309                            29.0   \n15270                0.0           1.638309                           483.0   \n15271                0.0           1.638309                             1.0   \n15272                0.0           1.638309                             1.0   \n\n       availability_365  number_of_reviews_ltm  ...  comments_word_freq_such  \\\n0                 147.0                    5.0  ...                      0.0   \n1                   0.0                    8.0  ...                      0.0   \n2                 107.0                   31.0  ...                      2.0   \n3                 327.0                   15.0  ...                      1.0   \n4                 191.0                   34.0  ...                      2.0   \n...                 ...                    ...  ...                      ...   \n15268               2.0                    0.0  ...                      0.0   \n15269             365.0                    0.0  ...                      0.0   \n15270             329.0                    0.0  ...                      0.0   \n15271               2.0                    0.0  ...                      0.0   \n15272              73.0                    0.0  ...                      0.0   \n\n       comments_word_freq_airport  comments_word_freq_sure  \\\n0                             0.0                      2.0   \n1                             0.0                      1.0   \n2                             0.0                      1.0   \n3                             0.0                      1.0   \n4                             2.0                     11.0   \n...                           ...                      ...   \n15268                         0.0                      0.0   \n15269                         0.0                      0.0   \n15270                         0.0                      0.0   \n15271                         0.0                      0.0   \n15272                         0.0                      0.0   \n\n       comments_word_freq_modern  comments_word_freq_find  \\\n0                            0.0                      2.0   \n1                            5.0                      1.0   \n2                            0.0                      1.0   \n3                            1.0                      2.0   \n4                            5.0                      6.0   \n...                          ...                      ...   \n15268                        0.0                      0.0   \n15269                        0.0                      0.0   \n15270                        0.0                      0.0   \n15271                        0.0                      0.0   \n15272                        0.0                      0.0   \n\n       comments_word_freq_floor  comments_word_freq_sur  \\\n0                           0.0                     3.0   \n1                           1.0                     5.0   \n2                           2.0                     7.0   \n3                           2.0                     2.0   \n4                           4.0                    16.0   \n...                         ...                     ...   \n15268                       0.0                     0.0   \n15269                       0.0                     0.0   \n15270                       0.0                     0.0   \n15271                       0.0                     0.0   \n15272                       0.0                     0.0   \n\n       comments_word_freq_outside  picture_exists  host_picture_exists  \n0                             4.0             1.0                  1.0  \n1                             7.0             1.0                  1.0  \n2                             0.0             1.0                  1.0  \n3                             3.0             1.0                  1.0  \n4                            11.0             1.0                  1.0  \n...                           ...             ...                  ...  \n15268                         0.0             1.0                  1.0  \n15269                         0.0             1.0                  1.0  \n15270                         0.0             1.0                  1.0  \n15271                         0.0             1.0                  1.0  \n15272                         0.0             1.0                  1.0  \n\n[15273 rows x 1983 columns]\n","output_type":"stream"},{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"(15273, 1983)"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"test_size = 0.2\ntrain_df, test_df = train_test_split(data, test_size=test_size, random_state=42)\n\n# Normalization stats from training data\n#train_mean = train_df.drop(target_clm, axis=1).mean().astype(np.float32).values\n#train_std = train_df.drop(target_clm, axis=1).std().replace(0, 1).astype(np.float32).values\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:46.474091Z","iopub.execute_input":"2025-07-09T09:32:46.474398Z","iopub.status.idle":"2025-07-09T09:32:46.606565Z","shell.execute_reply.started":"2025-07-09T09:32:46.474374Z","shell.execute_reply":"2025-07-09T09:32:46.606004Z"}},"outputs":[],"execution_count":6},{"cell_type":"markdown","source":"## Dataset","metadata":{}},{"cell_type":"code","source":"class ImageDataset(Dataset):\n    def __init__(self, dataframe, target_clm, image_dir_host, image_dir_picture, normalize=True, img_mean = None, img_std = None, tab_mean = None, tab_std = None ,transform=None):\n        self.data = dataframe\n        self.target_clm = target_clm\n        self.image_dir_host = image_dir_host\n        self.image_dir_picture = image_dir_picture\n        \n        self.transform = transform if transform else transforms.ToTensor()\n        self.normalize = normalize\n        self.img_mean = torch.tensor(img_mean).view(3, 1, 1) if img_mean is not None else None\n        self.img_std = torch.tensor(img_std).view(3, 1, 1) if img_std is not None else None\n        self.tab_mean = torch.tensor(tab_mean, dtype=torch.float32) if tab_mean is not None else None\n        self.tab_std = torch.tensor(tab_std, dtype=torch.float32) if tab_std is not None else None\n\n        self.tab_features = dataframe.drop(columns = [\"id\", target_clm]).to_numpy(dtype=np.float32)\n        self.targets = dataframe[target_clm].to_numpy\n\n        self.avg_img = Image.new('RGB', (128, 128), (int(0.485 * 255), int(0.456 * 255), int(0.406 * 255)))\n        \n    def __len__(self):\n        return len(self.data)\n\n    def __getitem__(self, idx):\n        row = self.data.iloc[idx]\n        img_id = int(row['id'])\n        target = data[self.target_clm].iloc[idx]\n\n        \n        img_path_host = os.path.join(self.image_dir_host, f\"image_{img_id}.jpg\")\n        img_path_picture = os.path.join(self.image_dir_picture, f\"image_{img_id}.jpg\")\n\n        img_host = None\n        img_picture = None\n\n        if not os.path.isfile(img_path_host):  \n            #avg_img = Image.new('RGB', (128, 128), (int(0.485 * 255), int(0.456 * 255), int(0.406 * 255)))\n            img_host = self.transform(self.avg_img)\n        else:\n            img_host = Image.open(img_path_host)\n            img_host = self.transform(img_host)\n            \n        if not os.path.isfile(img_path_picture):\n            img_picture = self.transform(self.avg_img)\n\n        else:\n            img_picture = Image.open(img_path_picture)\n            img_picture = self.transform(img_picture)\n\n        \n\n        x_tab = self.tab_features[idx]\n\n        if self.normalize:\n            if self.img_mean is not None and self.img_std is not None:\n                img_host = (img_host - self.img_mean) / self.img_std\n                img_picture = (img_picture - self.img_mean) / self.img_std \n            if self.tab_mean is not None and self.tab_std is not None:\n                x_tab = (x_tab - self.tab_mean.numpy()) / self.tab_std.numpy()\n\n        x_tab = torch.tensor(x_tab, dtype=torch.float32)\n        y = torch.tensor([target], dtype=torch.float32)\n                \n        \n        return (img_host, img_picture, x_tab), y\n\n\n        ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:46.607399Z","iopub.execute_input":"2025-07-09T09:32:46.607649Z","iopub.status.idle":"2025-07-09T09:32:46.617820Z","shell.execute_reply.started":"2025-07-09T09:32:46.607622Z","shell.execute_reply":"2025-07-09T09:32:46.617103Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"\n\n#typical for normal images\nimg_mean = [0.485, 0.456, 0.406]\nimg_std  = [0.229, 0.224, 0.225]\n\ntab_features = train_df.drop(columns=['id', target_clm])\n\ntab_mean = tab_features.mean().astype(np.float32).values\ntab_std = tab_features.std().replace(0, 1).astype(np.float32).values\n\ntransform = transforms.ToTensor()\n\ntrain_dataset_full = ImageDataset(train_df, target_clm, host_picture_dir, picture_dir, normalize = True, img_mean =  img_mean, img_std = img_std, tab_mean = tab_mean, tab_std = tab_std, transform = transform)\ntest_dataset = ImageDataset(test_df, target_clm, host_picture_dir, picture_dir, normalize = True, img_mean =  img_mean, img_std = img_std, tab_mean = tab_mean, tab_std = tab_std ,transform = transform)\n\n\n\ndef show_tensor_image(tensor, mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]):\n    # Clone to avoid modifying original tensor\n    tensor = tensor.clone().detach()\n\n    # Unnormalize\n    for t, m, s in zip(tensor, mean, std):\n        t.mul_(s).add_(m)\n\n    # Clip to [0, 1] range\n    tensor = tensor.clamp(0, 1)\n\n    # Convert to [H, W, C] for matplotlib\n    np_img = tensor.permute(1, 2, 0).cpu().numpy()\n\n    # Plot\n    plt.imshow(np_img)\n    plt.axis('off')\n    plt.show()\n\n(_,a,b),_ = train_dataset_full.__getitem__(1234)\n\nshow_tensor_image(a)\n\nprint(b.shape)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:46.618695Z","iopub.execute_input":"2025-07-09T09:32:46.618952Z","iopub.status.idle":"2025-07-09T09:32:47.106934Z","shell.execute_reply.started":"2025-07-09T09:32:46.618929Z","shell.execute_reply":"2025-07-09T09:32:47.106199Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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\n"},"metadata":{}},{"name":"stdout","text":"torch.Size([1981])\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"#split train/val\ntorch.manual_seed(0)\nval_ratio = 0.1\n\ntrain_dataset, val_dataset = random_split(train_dataset_full, [1 - val_ratio, val_ratio])\n\n#DataLoaders\nbatch_size = 128\ntrain_loader = DataLoader(train_dataset, batch_size = batch_size, shuffle=True)\nval_loader = DataLoader(val_dataset, batch_size=batch_size)\ntest_loader = DataLoader(test_dataset, batch_size=batch_size)\n\nimages, targets = next(iter(train_loader))\n\nprint(images[0].shape)\nprint(images[1].shape)\nprint()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:47.107819Z","iopub.execute_input":"2025-07-09T09:32:47.108081Z","iopub.status.idle":"2025-07-09T09:32:48.060331Z","shell.execute_reply.started":"2025-07-09T09:32:47.108053Z","shell.execute_reply":"2025-07-09T09:32:48.059525Z"}},"outputs":[{"name":"stdout","text":"torch.Size([128, 3, 128, 128])\ntorch.Size([128, 3, 128, 128])\n\n","output_type":"stream"}],"execution_count":9},{"cell_type":"code","source":"class ResNetBlock(nn.Module):\n    def __init__(self, channels):\n        super(ResNetBlock, self).__init__()\n        self.conv1 = torch.nn.Conv2d(channels, channels, kernel_size=3, stride=1, padding=1)\n        self.relu = torch.nn.ReLU(inplace=True)\n        self.conv2 = torch.nn.Conv2d(channels, channels, kernel_size=3, stride=1, padding=1)\n    def forward(self, x):\n        identity = x #(for resnet block adding)\n        out = self.relu(self.conv1(x))\n        out = self.conv2(out)\n        out += identity\n        out = self.relu(out)\n        return out","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:48.061119Z","iopub.execute_input":"2025-07-09T09:32:48.061406Z","iopub.status.idle":"2025-07-09T09:32:48.066939Z","shell.execute_reply.started":"2025-07-09T09:32:48.061385Z","shell.execute_reply":"2025-07-09T09:32:48.066208Z"}},"outputs":[],"execution_count":10},{"cell_type":"code","source":"#loosly based on AlexNet\n#based on resNet 12 https://www.researchgate.net/figure/The-structure-of-ResNet-12_fig1_329954455\nclass CNNBranch(nn.Module):\n    def __init__(self, in_channels=3, num_classes=96):\n        super(CNNBranch, self).__init__()\n\n        # self.feature_extractor = nn.Sequential(\n        #     torch.nn.Conv2d(in_channels = in_channels, out_channels=96, kernel_size=5), #-> 96x124x124\n        #     torch.nn.ReLU(),\n        #     torch.nn.AvgPool2d(kernel_size = 2), #-> 96x62x62\n        \n        #     torch.nn.Conv2d(in_channels = 96, out_channels = 256, kernel_size=3), #-> 256x60x60\n        #     torch.nn.ReLU(),\n        #     torch.nn.AvgPool2d(kernel_size = 2), #-> 256x30x30\n            \n        #     torch.nn.Conv2d(in_channels = 256, out_channels = 384, kernel_size=3), #-> 384x28x28\n        #     torch.nn.ReLU(),\n        #     torch.nn.Conv2d(in_channels=384, out_channels=384, kernel_size=3), #-> 384x26x26\n        #     torch.nn.ReLU(),\n        #     torch.nn.Conv2d(in_channels=384, out_channels=256, kernel_size=3), #-> 256x24x24\n        #     torch.nn.ReLU(),\n        #     torch.nn.AvgPool2d(kernel_size = 2) #-> 256x12x12\n\n        # )\n\n        #inital conv and pooling\n        self.stem = nn.Sequential(\n            nn.Conv2d(in_channels = in_channels, out_channels=64, kernel_size=3, stride=2, padding=1),\n            nn.ReLU(inplace=True),\n            nn.MaxPool2d(kernel_size = 3, stride = 2, padding = 1)\n        )\n\n        #ResNet blocks\n        self.resnet_blocks = nn.Sequential(\n            ResNetBlock(64),\n            ResNetBlock(64),\n            ResNetBlock(64),\n            ResNetBlock(64),\n            ResNetBlock(64)\n        )\n        \n        # Global average pooling\n        self.global_pool = nn.AdaptiveAvgPool2d((1,1)) #Output: [B, 64, 1, 1]\n\n        # Fully connected Layer\n\n        self.classifier = nn.Linear(64,num_classes)\n    \n\n    \n    def forward(self, x):\n        x = self.stem(x)\n        x = self.resnet_blocks(x)\n        x = self.global_pool(x)\n        x = torch.flatten(x, 1)\n        x = self.classifier(x)\n        return x\n\n        \n    \n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:48.069716Z","iopub.execute_input":"2025-07-09T09:32:48.069919Z","iopub.status.idle":"2025-07-09T09:32:48.087830Z","shell.execute_reply.started":"2025-07-09T09:32:48.069904Z","shell.execute_reply":"2025-07-09T09:32:48.087179Z"}},"outputs":[],"execution_count":11},{"cell_type":"code","source":"class PriceCNN(nn.Module):\n    def __init__(self):\n        super(PriceCNN, self).__init__()\n        self.interior_branch = CNNBranch()\n        self.host_branch = CNNBranch()\n\n        \n    def forward(self, interior_img, host_img):\n        f1 = self.interior_branch(interior_img)\n        f2 = self.host_branch(host_img)\n\n        combined = torch.cat((f1, f2), dim=1) #cat along channel axis\n        return combined.view(combined.size(0), -1) #flatten output\n    \n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:48.088459Z","iopub.execute_input":"2025-07-09T09:32:48.088700Z","iopub.status.idle":"2025-07-09T09:32:48.107808Z","shell.execute_reply.started":"2025-07-09T09:32:48.088683Z","shell.execute_reply":"2025-07-09T09:32:48.107079Z"}},"outputs":[],"execution_count":12},{"cell_type":"code","source":"class TabularNN(nn.Module):\n    def __init__(self, input_dim):\n        super(TabularNN, self).__init__()\n\n        self.mlp = nn.Sequential(\n            nn.Linear(input_dim, 512),\n            nn.ReLU(),\n            nn.Linear(512, 32),\n            nn.ReLU()\n        )\n        \n    def forward(self, x):\n        return self.mlp(x)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:48.108696Z","iopub.execute_input":"2025-07-09T09:32:48.108929Z","iopub.status.idle":"2025-07-09T09:32:48.121764Z","shell.execute_reply.started":"2025-07-09T09:32:48.108907Z","shell.execute_reply":"2025-07-09T09:32:48.121180Z"}},"outputs":[],"execution_count":13},{"cell_type":"code","source":"class FullMultimodalModel(nn.Module):\n    def __init__(self, tab_input_dim):\n        super(FullMultimodalModel, self).__init__()\n        self.image_net = PriceCNN()\n        self.tab_net = TabularNN(tab_input_dim)\n\n        img_feature_dim = 2 * 96\n        tab_feature_dim = 32\n\n        self.regressor = nn.Sequential(\n            nn.Linear(img_feature_dim + tab_feature_dim, 256),\n            nn.ReLU(),\n            nn.Linear(256,1)\n        )\n    def forward(self, tab_data, interior_img, host_img):\n        img_features = self.image_net(interior_img, host_img)\n        tab_features = self.tab_net(tab_data)\n\n        combined = torch.cat((img_features, tab_features), dim=1)\n        return self.regressor(combined)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:48.122517Z","iopub.execute_input":"2025-07-09T09:32:48.122762Z","iopub.status.idle":"2025-07-09T09:32:48.137712Z","shell.execute_reply.started":"2025-07-09T09:32:48.122741Z","shell.execute_reply":"2025-07-09T09:32:48.137034Z"}},"outputs":[],"execution_count":14},{"cell_type":"code","source":"print(\"Any NaN in features? \", np.isnan(data.drop(target_clm, axis=1).to_numpy()).any())\nprint(\"Any NaN in target? \", np.isnan(data[target_clm].to_numpy()).any())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:48.424819Z","iopub.execute_input":"2025-07-09T09:32:48.425032Z","iopub.status.idle":"2025-07-09T09:32:48.575552Z","shell.execute_reply.started":"2025-07-09T09:32:48.425016Z","shell.execute_reply":"2025-07-09T09:32:48.574779Z"}},"outputs":[{"name":"stdout","text":"Any NaN in features?  False\nAny NaN in target?  False\n","output_type":"stream"}],"execution_count":16},{"cell_type":"code","source":"def validate(dataloader, model, loss_fn, device, master_bar):\n    model.eval()\n    val_loss = 0\n\n    with torch.no_grad():\n        for batch in dataloader:\n            (interior_img, host_img, tab), price = batch\n            interior_img, host_img, tab, price = interior_img.to(device), host_img.to(device), tab.to(device),price.to(device)\n\n            #validate\n            outputs = model(tab, interior_img, host_img)\n            loss = loss_fn(outputs, price)\n            val_loss += loss.item()\n\n            master_bar.set_description(f\"Epoch {master_bar.n + 1} (Validate)\")\n            master_bar.set_postfix(loss=f\"{loss.item():.3f}\")\n    \n    return val_loss / len(dataloader)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:48.576355Z","iopub.execute_input":"2025-07-09T09:32:48.576634Z","iopub.status.idle":"2025-07-09T09:32:48.581714Z","shell.execute_reply.started":"2025-07-09T09:32:48.576608Z","shell.execute_reply":"2025-07-09T09:32:48.581101Z"}},"outputs":[],"execution_count":17},{"cell_type":"code","source":"def train(dataloader, optimizer, model, loss_fn, device, master_bar):\n    model.train()\n    train_loss = 0.0\n    for batch in dataloader:\n        (interior_img, host_img, tab), price = batch\n        interior_img = interior_img.to(device)\n        host_img = host_img.to(device)\n        tab = tab.to(device)\n        price = price.to(device)\n        #price = price.long()\n\n        #Forward pass\n        optimizer.zero_grad()\n        outputs = model(tab, interior_img, host_img)\n        loss = loss_fn(outputs, price)\n        train_loss += loss.item()\n        \n        #Backward pass\n        loss.backward()\n        optimizer.step()\n\n\n        master_bar.set_description(f\"Epoch {master_bar.n + 1} (Train)\")\n        master_bar.set_postfix(loss=f\"{loss.item():.3f}\")\n\n    return train_loss / len(dataloader)\n\n        ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:48.582453Z","iopub.execute_input":"2025-07-09T09:32:48.582729Z","iopub.status.idle":"2025-07-09T09:32:48.601276Z","shell.execute_reply.started":"2025-07-09T09:32:48.582713Z","shell.execute_reply":"2025-07-09T09:32:48.600641Z"}},"outputs":[],"execution_count":18},{"cell_type":"code","source":"def run_training(model, optimizer, loss_function, device, num_epochs, train_dataloader, val_dataloader):\n    train_losses = []\n    val_losses = []\n\n    master_bar = trange(num_epochs, desc=\"Training Epochs\")\n    for epoch in master_bar:\n        train_loss = train(train_dataloader, optimizer, model, loss_function, device, master_bar)\n        val_loss = validate(val_dataloader, model, loss_function, device, master_bar)\n\n        train_losses.append(train_loss)\n        val_losses.append(val_loss)\n\n    return train_losses, val_losses","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:48.601887Z","iopub.execute_input":"2025-07-09T09:32:48.602063Z","iopub.status.idle":"2025-07-09T09:32:48.617150Z","shell.execute_reply.started":"2025-07-09T09:32:48.602050Z","shell.execute_reply":"2025-07-09T09:32:48.616636Z"}},"outputs":[],"execution_count":19},{"cell_type":"code","source":"def evaluate_model(model, dataloader, device):\n    model.eval()\n    model.to(device)\n    absolute_errors = []\n    raw_errors = []\n\n    len(dataloader)\n\n    with torch.no_grad():\n        for batch in dataloader:\n            # Assumes batch is (inputs, targets)\n            (interior_img, host_img, tab), targets = batch\n            interior_img, host_img, tab, targets = interior_img.to(device), host_img.to(device), tab.to(device) ,targets.to(device)\n\n            outputs = model(tab, interior_img, host_img)\n            abs_error = abs(outputs - targets)\n            raw_error = outputs - targets\n            absolute_errors.extend(abs_error.cpu().numpy())\n            raw_errors.extend(raw_error.cpu().numpy())\n\n    return np.array(absolute_errors), np.array(raw_errors)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:48.617866Z","iopub.execute_input":"2025-07-09T09:32:48.618141Z","iopub.status.idle":"2025-07-09T09:32:48.636153Z","shell.execute_reply.started":"2025-07-09T09:32:48.618106Z","shell.execute_reply":"2025-07-09T09:32:48.635418Z"}},"outputs":[],"execution_count":20},{"cell_type":"code","source":"def plot_accuracy(errors, bins = 10, min_range = None, max_range = None, title=\"\"):\n\n    if min_range is None:\n        min_range = min(errors)\n    if max_range is None:\n        max_range = max(errors)\n\n    counts, bin_edges = np.histogram(errors, bins=bins, range=(min_range, max_range))\n\n    percentages = 100 * counts / counts.sum()\n\n    bin_widths = bin_edges[1:] - bin_edges[:-1]\n\n    plt.bar(bin_edges[:-1], percentages, width = bin_widths, align = 'edge', edgecolor='black')\n    plt.xlabel(\"Absolute Error\")\n    plt.ylabel(\"Percentage (%)\")\n    plt.title(\"Percentage Distribution of \" + title)\n    \n    #plt.hist(errors, bins, range=(min_range, max_range), density=True)\n    plt.grid(True)\n    plt.show() ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:48.636881Z","iopub.execute_input":"2025-07-09T09:32:48.637067Z","iopub.status.idle":"2025-07-09T09:32:48.651613Z","shell.execute_reply.started":"2025-07-09T09:32:48.637053Z","shell.execute_reply":"2025-07-09T09:32:48.651060Z"}},"outputs":[],"execution_count":21},{"cell_type":"code","source":"def plotLosses(losses, title = \"\"):\n    plt.plot(range(1, len(losses) + 1),losses[0], label=title + \" loss\")\n    plt.legend()\n    plt.title(title + \" loss per epoch\")\n    plt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T10:05:20.589975Z","iopub.execute_input":"2025-07-09T10:05:20.590544Z","iopub.status.idle":"2025-07-09T10:05:20.594387Z","shell.execute_reply.started":"2025-07-09T10:05:20.590520Z","shell.execute_reply":"2025-07-09T10:05:20.593630Z"}},"outputs":[],"execution_count":39},{"cell_type":"code","source":"# Device setup\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n\n# Instantiate model\ninput_dim = train_df.drop(target_clm, axis=1).shape[1]\nmodel = FullMultimodalModel(tab_input_dim=train_df.drop([\"id\", target_clm], axis=1).shape[1])\nmodel.to(device)\n\nmodel = model.float()\n# Loss and optimizer\ncriterion = torch.nn.MSELoss()\n#criterion = torch.nn.BCEWithLogitsLoss()\noptimizer = torch.optim.Adam(model.parameters(), lr=0.001, weight_decay=1e-4)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:32:48.138395Z","iopub.execute_input":"2025-07-09T09:32:48.138606Z","iopub.status.idle":"2025-07-09T09:32:48.424253Z","shell.execute_reply.started":"2025-07-09T09:32:48.138585Z","shell.execute_reply":"2025-07-09T09:32:48.423765Z"}},"outputs":[],"execution_count":15},{"cell_type":"code","source":"epochs= 3\nDifferent_weight_decay = []\ndecay_vals = [10e-3, 10e-4, 10e-5]\nfor decay in decay_vals:\n    optimizer = torch.optim.Adam(model.parameters(), lr=0.001, weight_decay=decay)\n    losses = run_training(model, optimizer, criterion, device, epochs, train_loader, val_loader)\n    Different_weight_decay.append([losses[0], losses[1]])\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T10:07:15.475804Z","iopub.execute_input":"2025-07-09T10:07:15.476091Z"}},"outputs":[{"name":"stderr","text":"Epoch 1 (Train):   0%|          | 0/3 [00:10<?, ?it/s, loss=58187.074]","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":"#plotLosses(Different_weight_decay[0][0], \"training loss\")\n#plotLosses(Different_weight_decay[0][1], \"training loss\")\nprint(Different_weight_decay[0])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T10:06:45.703068Z","iopub.execute_input":"2025-07-09T10:06:45.703641Z","iopub.status.idle":"2025-07-09T10:06:45.707668Z","shell.execute_reply.started":"2025-07-09T10:06:45.703617Z","shell.execute_reply":"2025-07-09T10:06:45.706850Z"}},"outputs":[{"name":"stdout","text":"([47434.33820857558, 67719.1681277253, 42565.61744867369], [24166972.029296875, 30666675.7015625, 42223960.12148438])\n","output_type":"stream"}],"execution_count":42},{"cell_type":"code","source":"#evaluate\nabs_err, raw_err = evaluate_model(model, test_loader, device)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:40:11.632173Z","iopub.execute_input":"2025-07-09T09:40:11.632467Z","iopub.status.idle":"2025-07-09T09:40:37.943085Z","shell.execute_reply.started":"2025-07-09T09:40:11.632449Z","shell.execute_reply":"2025-07-09T09:40:37.942484Z"}},"outputs":[],"execution_count":23},{"cell_type":"code","source":"plot_accuracy(abs_err, bins = 10, min_range = 0, max_range = 500, title=\"abs errors\")\nplot_accuracy(raw_err, bins = 20, min_range = -500, max_range = 500, title=\"all errors\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:40:37.943862Z","iopub.execute_input":"2025-07-09T09:40:37.944064Z","iopub.status.idle":"2025-07-09T09:40:38.261114Z","shell.execute_reply.started":"2025-07-09T09:40:37.944049Z","shell.execute_reply":"2025-07-09T09:40:38.260396Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":24},{"cell_type":"code","source":"plotLosses(losses[0], title=\"training\")\nplotLosses(losses[1], title=\"validation\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-09T09:40:38.267670Z","iopub.execute_input":"2025-07-09T09:40:38.267976Z","iopub.status.idle":"2025-07-09T09:40:38.564070Z","shell.execute_reply.started":"2025-07-09T09:40:38.267954Z","shell.execute_reply":"2025-07-09T09:40:38.563401Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":26}]}